name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Cache cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry
          restore-keys: |
            ${{ runner.os }}-cargo-registry

      - name: Cache cargo index
        uses: actions/cache@v2
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index
          restore-keys: |
            ${{ runner.os }}-cargo-index

      - name: Build
        run: cargo build --release

      - name: Run tests
        run: cargo test

      - name: Security Audit
        run: cargo audit

      - name: Package
        run: |
          mkdir -p dist
          if [ "$RUNNER_OS" = "Windows" ]; then
            cp target/release/mock_data.exe dist/mock_data.exe
          else
            cp target/release/mock_data dist/mock_data
          fi
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: mock_data-${{ matrix.os }}
          path: dist/

  release:
    permissions:
      contents: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Download Linux Artifact
        uses: actions/download-artifact@v3
        with:
          name: mock_data-ubuntu-latest
          path: dist/ubuntu

      - name: Download MacOS Artifact
        uses: actions/download-artifact@v3
        with:
          name: mock_data-macos-latest
          path: dist/macos

      - name: Download Windows Artifact
        uses: actions/download-artifact@v3
        with:
          name: mock_data-windows-latest
          path: dist/windows

      - name: Compress Assets
        run: |
          tar -czvf dist/mock_data-ubuntu.tar.gz -C dist/ubuntu .
          tar -czvf dist/mock_data-macos.tar.gz -C dist/macos .
          tar -czvf dist/mock_data-windows.tar.gz -C dist/windows .

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
